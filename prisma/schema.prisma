// Prisma Schema for SIPELAN

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("prisma+postgres://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqd3RfaWQiOjEsInNlY3VyZV9rZXkiOiJza19RM3lsXzZQV3NQNTYxS0RlZUVSekMiLCJhcGlfa2V5IjoiMDFLOFBTQVo0UUNOOVg3NjVYOTlYUjhSUFYiLCJ0ZW5hbnRfaWQiOiI2YTJjODIzNmYxMGUwZDZlOWY0NTRkMmY1ZTJlZDhmMWQ3NjA5ZTQxYTdlZDNiZTVhYWE3NjJlYjM0ZDVhZjc2IiwiaW50ZXJuYWxfc2VjcmV0IjoiYjg2M2NiMGItNjdkOC00MDQ5LTg5M2EtODM1MGNhNjc2OGIyIn0.QvbDU7oqQ8MSUUQ1pFwYZZOGfWgPVVtewT0BHymanPA")
}

// User Model (Masyarakat, Pegawai, Administrator)
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  nama      String
  nip       String?  @unique // Untuk Pegawai & Administrator
  role      Role     @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  pengaduan        Pengaduan[]
  pengaduanHistory PengaduanHistory[]
  
  @@map("users")
}

enum Role {
  USER          // Masyarakat umum
  PEGAWAI       // Pegawai Disnaker
  ADMINISTRATOR // Administrator sistem
}

// Pengaduan Model
model Pengaduan {
  id             String   @id @default(cuid())
  ticketNumber   String   @unique
  
  // User ID (optional - untuk user yang login)
  userId         String?
  
  // Data Pelapor
  nama           String
  nik            String
  email          String
  telepon        String
  alamat         String
  
  // Data Pengaduan
  kategori       String
  judul          String
  deskripsi      String
  lokasi         String
  tanggalKejadian DateTime
  
  // Status
  status         Status   @default(PENDING)
  
  // Timestamps
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  // Relations
  user           User?    @relation(fields: [userId], references: [id])
  files          PengaduanFile[]
  history        PengaduanHistory[]
  
  @@index([ticketNumber])
  @@index([email])
  @@index([status])
  @@index([createdAt])
  @@index([userId])
  @@map("pengaduan")
}

enum Status {
  PENDING
  DIPROSES
  SELESAI
  DITOLAK
}

// File Upload Model
model PengaduanFile {
  id           String     @id @default(cuid())
  pengaduanId  String
  fileName     String
  filePath     String
  fileSize     Int
  fileType     String
  uploadedAt   DateTime   @default(now())
  
  // Relations
  pengaduan    Pengaduan  @relation(fields: [pengaduanId], references: [id], onDelete: Cascade)
  
  @@index([pengaduanId])
  @@map("pengaduan_files")
}

// History/Timeline Model
model PengaduanHistory {
  id           String     @id @default(cuid())
  pengaduanId  String
  status       String
  keterangan   String
  createdBy    String?
  createdAt    DateTime   @default(now())
  
  // Relations
  pengaduan    Pengaduan  @relation(fields: [pengaduanId], references: [id], onDelete: Cascade)
  user         User?      @relation(fields: [createdBy], references: [id])
  
  @@index([pengaduanId])
  @@map("pengaduan_history")
}

// Statistics Cache Model (for performance)
model StatisticsCache {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String   // JSON string
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  @@map("statistics_cache")
}
